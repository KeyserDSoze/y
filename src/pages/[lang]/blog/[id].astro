---
import BaseLayout from "../../../layouts/BaseLayout.astro";
import Header from "../../../components/Header.astro";
import Footer from "../../../components/Footer.astro";
import FormattedDate from "../../../components/FormattedDate.astro";
import { t, LOCALES } from "../../../i18n";
import { getCollection, render } from 'astro:content';

export async function getStaticPaths() {
  const allPosts = await getCollection('blog');
  
  // Create paths for each language and each post
  const paths = [];
  
  for (const lang of LOCALES) {
    const postsInLang = allPosts.filter(post => post.data.lang === lang);
    
    for (const post of postsInLang) {
      // Use id if available, otherwise use slug
      const id = post.data.id || post.slug;
      
      // Skip if no valid id/slug
      if (!id) {
        console.warn(`Post ${post.id} has no id or slug, skipping...`);
        continue;
      }
      
      paths.push({
        params: { lang, id },
        props: { } // We'll find the post using params instead
      });
    }
  }
  
  return paths;
}

const { lang, id } = Astro.params;
const _ = (k) => t(lang, k);

// Get the actual post object from the collection
const allPosts = await getCollection('blog');
// Find post by matching the id parameter with either the custom id or slug
const post = allPosts.find(p => {
  const postId = p.data.id || p.slug;
  return postId === id && p.data.lang === lang;
});

if (!post) {
  return Astro.redirect('/404');
}

// Find posts with the same ID in other languages for language switching
const currentId = post.data.id || post.slug;
const relatedPosts = allPosts.filter(p => (p.data.id || p.slug) === currentId);

const { Content } = await render(post);
---

<BaseLayout 
  title={`${post.data.title} — InsideTheGame`} 
  description={post.data.description}
  lang={lang}
>
  <Header />
  
  <!-- Language Switcher -->
  <div class="bg-gray-50 border-b">
    <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-2">
      <div class="flex justify-end space-x-4">
        {LOCALES.map(l => {
          const relatedPost = relatedPosts.find(p => p.data.lang === l);
          const href = relatedPost ? `/${l}/blog/${relatedPost.data.id || relatedPost.slug}/` : `/${l}/blog/`;
          const flag = l === 'it' ? '🇮🇹' : l === 'es' ? '🇪🇸' : '🇬🇧';
          const label = l === 'it' ? 'Italiano' : l === 'es' ? 'Español' : 'English';
          
          return (
            <a 
              href={href} 
              class={`text-sm ${lang === l ? 'font-bold text-blue-600' : 'text-gray-600 hover:text-blue-600'}`}
            >
              {flag} {label}
            </a>
          );
        })}
      </div>
    </div>
  </div>

  <!-- Breadcrumb -->
  <div class="bg-white border-b">
    <div class="max-w-4xl mx-auto px-4 sm:px-6 lg:px-8 py-4">
      <nav class="flex" aria-label="Breadcrumb">
        <ol class="flex items-center space-x-4">
          <li>
            <a href={`/${lang}/`} class="text-gray-500 hover:text-gray-700">
              {_('nav.home')}
            </a>
          </li>
          <li>
            <svg class="flex-shrink-0 h-5 w-5 text-gray-400" fill="currentColor" viewBox="0 0 20 20">
              <path fill-rule="evenodd" d="M7.293 14.707a1 1 0 010-1.414L10.586 10 7.293 6.707a1 1 0 011.414-1.414l4 4a1 1 0 010 1.414l-4 4a1 1 0 01-1.414 0z" clip-rule="evenodd" />
            </svg>
          </li>
          <li>
            <a href={`/${lang}/blog/`} class="text-gray-500 hover:text-gray-700">
              {_('nav.blog')}
            </a>
          </li>
          <li>
            <svg class="flex-shrink-0 h-5 w-5 text-gray-400" fill="currentColor" viewBox="0 0 20 20">
              <path fill-rule="evenodd" d="M7.293 14.707a1 1 0 010-1.414L10.586 10 7.293 6.707a1 1 0 011.414-1.414l4 4a1 1 0 010 1.414l-4 4a1 1 0 01-1.414 0z" clip-rule="evenodd" />
            </svg>
          </li>
          <li class="text-gray-900 font-medium truncate">
            {post.data.title}
          </li>
        </ol>
      </nav>
    </div>
  </div>

  <main class="py-12">
    <article class="max-w-4xl mx-auto px-4 sm:px-6 lg:px-8">
      <!-- Article Header -->
      <header class="mb-8">
        <div class="text-center mb-8">
          <div class="flex items-center justify-center text-sm text-gray-500 mb-4">
            <FormattedDate date={post.data.date} />
          </div>
          <h1 class="text-4xl md:text-5xl font-bold text-gray-900 mb-6 leading-tight">
            {post.data.title}
          </h1>
          {post.data.description && (
            <p class="text-xl text-gray-600 leading-relaxed max-w-3xl mx-auto">
              {post.data.description}
            </p>
          )}
        </div>
      </header>

      <!-- Article Content -->
      <div class="prose prose-lg prose-blue max-w-none">
        <Content />
      </div>

      <!-- Article Footer -->
      <footer class="mt-12 pt-8 border-t border-gray-200">
        <div class="flex items-center justify-between">
          <div class="flex space-x-4">
            <span class="text-sm text-gray-500">
              {lang === 'it' ? 'Condividi questo articolo:' : 
               lang === 'es' ? 'Comparte este artículo:' :
               'Share this article:'}
            </span>
          </div>
          <a 
            href={`/${lang}/blog/`}
            class="inline-flex items-center text-blue-600 hover:text-blue-700 font-medium"
          >
            ← {lang === 'it' ? 'Torna al blog' : 
                 lang === 'es' ? 'Volver al blog' :
                 'Back to blog'}
          </a>
        </div>
      </footer>
    </article>
  </main>

  <Footer />
</BaseLayout>
